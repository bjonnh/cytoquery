name: Build, Test, and Deploy

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      create_beta_release:
        description: 'Create a beta release'
        required: true
        type: boolean
        default: false

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build plugin
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: obsidian-cytoquery-build
        path: |
          build/main.js
          build/manifest.json
          build/styles.css
        if-no-files-found: error
    
    - name: Prepare demo files
      run: |
        mkdir -p demo-dist
        # Copy from build directory
        cp build/main.js demo-dist/
        cp build/styles.css demo-dist/
        cp demo/index.html demo-dist/
    
    - name: Upload demo artifacts
      uses: actions/upload-artifact@v4
      with:
        name: demo-files
        path: demo-dist/
        if-no-files-found: error
  
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: obsidian-cytoquery-build
        path: ./release
    
    - name: Create release bundle
      run: |
        # Files are already in the release directory from the artifact download
        cd release
        # Remove the build/ prefix from files
        mv build/main.js . || true
        mv build/manifest.json . || true
        mv build/styles.css . || true
        rmdir build || true
        zip -r ../obsidian-cytoquery.zip main.js manifest.json styles.css
        cd ..
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          obsidian-cytoquery.zip
          release/main.js
          release/manifest.json
          release/styles.css
        generate_release_notes: true
        draft: false
        prerelease: false
  
  beta-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.create_beta_release == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: obsidian-cytoquery-build
        path: ./release
    
    - name: Get version and create beta tag
      id: beta_version
      run: |
        # Read current version from manifest.json
        CURRENT_VERSION=$(jq -r '.version' < manifest.json)
        # Create timestamp with seconds precision
        TIMESTAMP=$(date +%s)
        # Create beta version
        BETA_VERSION="${CURRENT_VERSION}-beta.${TIMESTAMP}"
        echo "version=$BETA_VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$BETA_VERSION" >> $GITHUB_OUTPUT
        echo "Beta version: $BETA_VERSION"
    
    - name: Create release bundle
      run: |
        # Files are already in the release directory from the artifact download
        cd release
        # Remove the build/ prefix from files
        mv build/main.js . || true
        mv build/manifest.json . || true
        mv build/styles.css . || true
        rmdir build || true
        zip -r ../obsidian-cytoquery-beta.zip main.js manifest.json styles.css
        cd ..
    
    - name: Create Beta Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.beta_version.outputs.tag }}
        name: "Beta Release ${{ steps.beta_version.outputs.version }}"
        files: |
          obsidian-cytoquery-beta.zip
          release/main.js
          release/manifest.json
          release/styles.css
        generate_release_notes: true
        draft: false
        prerelease: true
        body: |
          This is a beta release of Obsidian CytoQuery.
          
          **Version:** ${{ steps.beta_version.outputs.version }}
          
          To install this beta version using BRAT:
          1. Install the BRAT plugin if you haven't already
          2. Add this repository to BRAT
          3. Select this specific beta version from the version picker
          
          **Note:** This beta release uses the same manifest.json version as the stable release to ensure compatibility with BRAT and Obsidian's update system.
  
  deploy-demo:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download demo artifacts
      uses: actions/download-artifact@v4
      with:
        name: demo-files
        path: ./demo-dist
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './demo-dist'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4